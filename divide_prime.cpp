#include <iostream>

using namespace std;

//  每个合数都可以写成几个质数相乘的形式，其中每个质数都是这个合数的因数，
//  把一个合数用质因数相乘的形式表示出来，叫做分解质因数,分解质因数只针对合数;

void divide(int n)
{
    // 因为n当中最多只包含一个大于根号n的质因子，因此在这里首先枚举所有小于根号n的质因子
    for (int i = 2; i <= n / i; ++ i) { // 从小到大枚举所有数；
        if (n % i == 0) {// i一定是质数； 
            // 当枚举到i的时候就意味着已经把从2~i - 1中的所有质因子都除干净了;
            // 当枚举到i的时候就意味着n当中已经不包含任何从2~i-1之间的质因子了
            // 假如n%i == 0 n是i的倍数，并且n当中不包含任何2~i - 1之间的质因子，所以说i当中也不包含
            // 任何2~i - 1之间的质因子， 假如i当中包含2~i - 1之间的质因子，那么就说明n当中也包含2~i - 1
            // 之间的质因子，与前文矛盾，因此i一定是质数；
            int s = 0;
            while (n % i == 0) {
                n = n / i;
                ++ s;
            }
            cout << i << " " << s << endl;
        }
    }

    if (n > 1) {
        cout << n << " " << 1 << endl;
    }
}


int main()
{
    int n = 0, x = 0;
    cin >> n;
    while (n --) {
        cin >> x;
        divide(x);
        cout << endl;
    }
    return 0;
}

